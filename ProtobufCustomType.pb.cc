// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtobufCustomType.proto

#include "ProtobufCustomType.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace myprotobuf {
class OctetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Octet>
      _instance;
} _Octet_default_instance_;
class LongSeqTestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LongSeqTest>
      _instance;
} _LongSeqTest_default_instance_;
class DoubleSeqTestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DoubleSeqTest>
      _instance;
} _DoubleSeqTest_default_instance_;
class StringTestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StringTest>
      _instance;
} _StringTest_default_instance_;
class StringSeqTestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StringSeqTest>
      _instance;
} _StringSeqTest_default_instance_;
class ArrayLongSeqTestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ArrayLongSeqTest>
      _instance;
} _ArrayLongSeqTest_default_instance_;
class SeqArrayLongSeqTestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SeqArrayLongSeqTest>
      _instance;
} _SeqArrayLongSeqTest_default_instance_;
class TestCustomTypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TestCustomType>
      _instance;
} _TestCustomType_default_instance_;
}  // namespace myprotobuf
namespace protobuf_ProtobufCustomType_2eproto {
void InitDefaultsOctetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::myprotobuf::_Octet_default_instance_;
    new (ptr) ::myprotobuf::Octet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::myprotobuf::Octet::InitAsDefaultInstance();
}

void InitDefaultsOctet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOctetImpl);
}

void InitDefaultsLongSeqTestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::myprotobuf::_LongSeqTest_default_instance_;
    new (ptr) ::myprotobuf::LongSeqTest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::myprotobuf::LongSeqTest::InitAsDefaultInstance();
}

void InitDefaultsLongSeqTest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLongSeqTestImpl);
}

void InitDefaultsDoubleSeqTestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::myprotobuf::_DoubleSeqTest_default_instance_;
    new (ptr) ::myprotobuf::DoubleSeqTest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::myprotobuf::DoubleSeqTest::InitAsDefaultInstance();
}

void InitDefaultsDoubleSeqTest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDoubleSeqTestImpl);
}

void InitDefaultsStringTestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::myprotobuf::_StringTest_default_instance_;
    new (ptr) ::myprotobuf::StringTest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::myprotobuf::StringTest::InitAsDefaultInstance();
}

void InitDefaultsStringTest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStringTestImpl);
}

void InitDefaultsStringSeqTestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_ProtobufCustomType_2eproto::InitDefaultsStringTest();
  {
    void* ptr = &::myprotobuf::_StringSeqTest_default_instance_;
    new (ptr) ::myprotobuf::StringSeqTest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::myprotobuf::StringSeqTest::InitAsDefaultInstance();
}

void InitDefaultsStringSeqTest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStringSeqTestImpl);
}

void InitDefaultsArrayLongSeqTestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_ProtobufCustomType_2eproto::InitDefaultsLongSeqTest();
  {
    void* ptr = &::myprotobuf::_ArrayLongSeqTest_default_instance_;
    new (ptr) ::myprotobuf::ArrayLongSeqTest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::myprotobuf::ArrayLongSeqTest::InitAsDefaultInstance();
}

void InitDefaultsArrayLongSeqTest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsArrayLongSeqTestImpl);
}

void InitDefaultsSeqArrayLongSeqTestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_ProtobufCustomType_2eproto::InitDefaultsArrayLongSeqTest();
  {
    void* ptr = &::myprotobuf::_SeqArrayLongSeqTest_default_instance_;
    new (ptr) ::myprotobuf::SeqArrayLongSeqTest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::myprotobuf::SeqArrayLongSeqTest::InitAsDefaultInstance();
}

void InitDefaultsSeqArrayLongSeqTest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSeqArrayLongSeqTestImpl);
}

void InitDefaultsTestCustomTypeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_ProtobufCustomType_2eproto::InitDefaultsOctet();
  protobuf_ProtobufCustomType_2eproto::InitDefaultsLongSeqTest();
  protobuf_ProtobufCustomType_2eproto::InitDefaultsStringTest();
  protobuf_ProtobufCustomType_2eproto::InitDefaultsStringSeqTest();
  protobuf_ProtobufCustomType_2eproto::InitDefaultsDoubleSeqTest();
  protobuf_ProtobufCustomType_2eproto::InitDefaultsArrayLongSeqTest();
  protobuf_ProtobufCustomType_2eproto::InitDefaultsSeqArrayLongSeqTest();
  {
    void* ptr = &::myprotobuf::_TestCustomType_default_instance_;
    new (ptr) ::myprotobuf::TestCustomType();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::myprotobuf::TestCustomType::InitAsDefaultInstance();
}

void InitDefaultsTestCustomType() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTestCustomTypeImpl);
}

::google::protobuf::Metadata file_level_metadata[8];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::myprotobuf::Octet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::myprotobuf::Octet, octet_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::myprotobuf::LongSeqTest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::myprotobuf::LongSeqTest, long_mem_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::myprotobuf::DoubleSeqTest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::myprotobuf::DoubleSeqTest, double_mem_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::myprotobuf::StringTest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::myprotobuf::StringTest, char_mem_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::myprotobuf::StringSeqTest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::myprotobuf::StringSeqTest, string_mem_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::myprotobuf::ArrayLongSeqTest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::myprotobuf::ArrayLongSeqTest, array_long_seq_mem_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::myprotobuf::SeqArrayLongSeqTest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::myprotobuf::SeqArrayLongSeqTest, seq_array_long_seq_mem_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::myprotobuf::TestCustomType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::myprotobuf::TestCustomType, test_long_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::myprotobuf::TestCustomType, test_octet_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::myprotobuf::TestCustomType, test_long_seq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::myprotobuf::TestCustomType, test_string_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::myprotobuf::TestCustomType, test_string_seq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::myprotobuf::TestCustomType, test_double_seq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::myprotobuf::TestCustomType, test_array_long_seq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::myprotobuf::TestCustomType, seq_array_long_seq_test_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::myprotobuf::Octet)},
  { 6, -1, sizeof(::myprotobuf::LongSeqTest)},
  { 12, -1, sizeof(::myprotobuf::DoubleSeqTest)},
  { 18, -1, sizeof(::myprotobuf::StringTest)},
  { 24, -1, sizeof(::myprotobuf::StringSeqTest)},
  { 30, -1, sizeof(::myprotobuf::ArrayLongSeqTest)},
  { 36, -1, sizeof(::myprotobuf::SeqArrayLongSeqTest)},
  { 42, -1, sizeof(::myprotobuf::TestCustomType)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::myprotobuf::_Octet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::myprotobuf::_LongSeqTest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::myprotobuf::_DoubleSeqTest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::myprotobuf::_StringTest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::myprotobuf::_StringSeqTest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::myprotobuf::_ArrayLongSeqTest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::myprotobuf::_SeqArrayLongSeqTest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::myprotobuf::_TestCustomType_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "ProtobufCustomType.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\030ProtobufCustomType.proto\022\nmyprotobuf\"\026"
      "\n\005Octet\022\r\n\005octet\030\001 \001(\014\"\037\n\013LongSeqTest\022\020\n"
      "\010long_mem\030\001 \003(\017\"#\n\rDoubleSeqTest\022\022\n\ndoub"
      "le_mem\030\001 \003(\001\"\036\n\nStringTest\022\020\n\010char_mem\030\001"
      " \003(\014\";\n\rStringSeqTest\022*\n\nstring_mem\030\001 \003("
      "\0132\026.myprotobuf.StringTest\"G\n\020ArrayLongSe"
      "qTest\0223\n\022array_long_seq_mem\030\001 \003(\0132\027.mypr"
      "otobuf.LongSeqTest\"S\n\023SeqArrayLongSeqTes"
      "t\022<\n\026seq_array_long_seq_mem\030\001 \003(\0132\034.mypr"
      "otobuf.ArrayLongSeqTest\"\214\003\n\016TestCustomTy"
      "pe\022\021\n\ttest_long\030\001 \001(\005\022%\n\ntest_octet\030\002 \003("
      "\0132\021.myprotobuf.Octet\022.\n\rtest_long_seq\030\003 "
      "\001(\0132\027.myprotobuf.LongSeqTest\022+\n\013test_str"
      "ing\030\004 \001(\0132\026.myprotobuf.StringTest\0222\n\017tes"
      "t_string_seq\030\005 \001(\0132\031.myprotobuf.StringSe"
      "qTest\0222\n\017test_double_seq\030\006 \001(\0132\031.myproto"
      "buf.DoubleSeqTest\0229\n\023test_array_long_seq"
      "\030\007 \001(\0132\034.myprotobuf.ArrayLongSeqTest\022@\n\027"
      "seq_array_long_seq_test\030\010 \001(\0132\037.myprotob"
      "uf.SeqArrayLongSeqTestb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 790);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtobufCustomType.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_ProtobufCustomType_2eproto
namespace myprotobuf {

// ===================================================================

void Octet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Octet::kOctetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Octet::Octet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ProtobufCustomType_2eproto::InitDefaultsOctet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:myprotobuf.Octet)
}
Octet::Octet(const Octet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  octet_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.octet().size() > 0) {
    octet_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.octet_);
  }
  // @@protoc_insertion_point(copy_constructor:myprotobuf.Octet)
}

void Octet::SharedCtor() {
  octet_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Octet::~Octet() {
  // @@protoc_insertion_point(destructor:myprotobuf.Octet)
  SharedDtor();
}

void Octet::SharedDtor() {
  octet_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Octet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Octet::descriptor() {
  ::protobuf_ProtobufCustomType_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtobufCustomType_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Octet& Octet::default_instance() {
  ::protobuf_ProtobufCustomType_2eproto::InitDefaultsOctet();
  return *internal_default_instance();
}

Octet* Octet::New(::google::protobuf::Arena* arena) const {
  Octet* n = new Octet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Octet::Clear() {
// @@protoc_insertion_point(message_clear_start:myprotobuf.Octet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  octet_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Octet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:myprotobuf.Octet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes octet = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_octet()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:myprotobuf.Octet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:myprotobuf.Octet)
  return false;
#undef DO_
}

void Octet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:myprotobuf.Octet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes octet = 1;
  if (this->octet().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->octet(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:myprotobuf.Octet)
}

::google::protobuf::uint8* Octet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:myprotobuf.Octet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes octet = 1;
  if (this->octet().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->octet(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:myprotobuf.Octet)
  return target;
}

size_t Octet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:myprotobuf.Octet)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes octet = 1;
  if (this->octet().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->octet());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Octet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:myprotobuf.Octet)
  GOOGLE_DCHECK_NE(&from, this);
  const Octet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Octet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:myprotobuf.Octet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:myprotobuf.Octet)
    MergeFrom(*source);
  }
}

void Octet::MergeFrom(const Octet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:myprotobuf.Octet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.octet().size() > 0) {

    octet_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.octet_);
  }
}

void Octet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:myprotobuf.Octet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Octet::CopyFrom(const Octet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:myprotobuf.Octet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Octet::IsInitialized() const {
  return true;
}

void Octet::Swap(Octet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Octet::InternalSwap(Octet* other) {
  using std::swap;
  octet_.Swap(&other->octet_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Octet::GetMetadata() const {
  protobuf_ProtobufCustomType_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtobufCustomType_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LongSeqTest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LongSeqTest::kLongMemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LongSeqTest::LongSeqTest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ProtobufCustomType_2eproto::InitDefaultsLongSeqTest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:myprotobuf.LongSeqTest)
}
LongSeqTest::LongSeqTest(const LongSeqTest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      long_mem_(from.long_mem_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:myprotobuf.LongSeqTest)
}

void LongSeqTest::SharedCtor() {
  _cached_size_ = 0;
}

LongSeqTest::~LongSeqTest() {
  // @@protoc_insertion_point(destructor:myprotobuf.LongSeqTest)
  SharedDtor();
}

void LongSeqTest::SharedDtor() {
}

void LongSeqTest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LongSeqTest::descriptor() {
  ::protobuf_ProtobufCustomType_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtobufCustomType_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LongSeqTest& LongSeqTest::default_instance() {
  ::protobuf_ProtobufCustomType_2eproto::InitDefaultsLongSeqTest();
  return *internal_default_instance();
}

LongSeqTest* LongSeqTest::New(::google::protobuf::Arena* arena) const {
  LongSeqTest* n = new LongSeqTest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LongSeqTest::Clear() {
// @@protoc_insertion_point(message_clear_start:myprotobuf.LongSeqTest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  long_mem_.Clear();
  _internal_metadata_.Clear();
}

bool LongSeqTest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:myprotobuf.LongSeqTest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sfixed32 long_mem = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, this->mutable_long_mem())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 1, 10u, input, this->mutable_long_mem())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:myprotobuf.LongSeqTest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:myprotobuf.LongSeqTest)
  return false;
#undef DO_
}

void LongSeqTest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:myprotobuf.LongSeqTest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed32 long_mem = 1;
  if (this->long_mem_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _long_mem_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32Array(
      this->long_mem().data(), this->long_mem_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:myprotobuf.LongSeqTest)
}

::google::protobuf::uint8* LongSeqTest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:myprotobuf.LongSeqTest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sfixed32 long_mem = 1;
  if (this->long_mem_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _long_mem_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed32NoTagToArray(this->long_mem_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:myprotobuf.LongSeqTest)
  return target;
}

size_t LongSeqTest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:myprotobuf.LongSeqTest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sfixed32 long_mem = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->long_mem_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _long_mem_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LongSeqTest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:myprotobuf.LongSeqTest)
  GOOGLE_DCHECK_NE(&from, this);
  const LongSeqTest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LongSeqTest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:myprotobuf.LongSeqTest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:myprotobuf.LongSeqTest)
    MergeFrom(*source);
  }
}

void LongSeqTest::MergeFrom(const LongSeqTest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:myprotobuf.LongSeqTest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  long_mem_.MergeFrom(from.long_mem_);
}

void LongSeqTest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:myprotobuf.LongSeqTest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LongSeqTest::CopyFrom(const LongSeqTest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:myprotobuf.LongSeqTest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LongSeqTest::IsInitialized() const {
  return true;
}

void LongSeqTest::Swap(LongSeqTest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LongSeqTest::InternalSwap(LongSeqTest* other) {
  using std::swap;
  long_mem_.InternalSwap(&other->long_mem_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LongSeqTest::GetMetadata() const {
  protobuf_ProtobufCustomType_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtobufCustomType_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DoubleSeqTest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DoubleSeqTest::kDoubleMemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DoubleSeqTest::DoubleSeqTest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ProtobufCustomType_2eproto::InitDefaultsDoubleSeqTest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:myprotobuf.DoubleSeqTest)
}
DoubleSeqTest::DoubleSeqTest(const DoubleSeqTest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      double_mem_(from.double_mem_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:myprotobuf.DoubleSeqTest)
}

void DoubleSeqTest::SharedCtor() {
  _cached_size_ = 0;
}

DoubleSeqTest::~DoubleSeqTest() {
  // @@protoc_insertion_point(destructor:myprotobuf.DoubleSeqTest)
  SharedDtor();
}

void DoubleSeqTest::SharedDtor() {
}

void DoubleSeqTest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DoubleSeqTest::descriptor() {
  ::protobuf_ProtobufCustomType_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtobufCustomType_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DoubleSeqTest& DoubleSeqTest::default_instance() {
  ::protobuf_ProtobufCustomType_2eproto::InitDefaultsDoubleSeqTest();
  return *internal_default_instance();
}

DoubleSeqTest* DoubleSeqTest::New(::google::protobuf::Arena* arena) const {
  DoubleSeqTest* n = new DoubleSeqTest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DoubleSeqTest::Clear() {
// @@protoc_insertion_point(message_clear_start:myprotobuf.DoubleSeqTest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  double_mem_.Clear();
  _internal_metadata_.Clear();
}

bool DoubleSeqTest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:myprotobuf.DoubleSeqTest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double double_mem = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_double_mem())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 10u, input, this->mutable_double_mem())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:myprotobuf.DoubleSeqTest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:myprotobuf.DoubleSeqTest)
  return false;
#undef DO_
}

void DoubleSeqTest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:myprotobuf.DoubleSeqTest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double double_mem = 1;
  if (this->double_mem_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _double_mem_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->double_mem().data(), this->double_mem_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:myprotobuf.DoubleSeqTest)
}

::google::protobuf::uint8* DoubleSeqTest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:myprotobuf.DoubleSeqTest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double double_mem = 1;
  if (this->double_mem_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _double_mem_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->double_mem_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:myprotobuf.DoubleSeqTest)
  return target;
}

size_t DoubleSeqTest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:myprotobuf.DoubleSeqTest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated double double_mem = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->double_mem_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _double_mem_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DoubleSeqTest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:myprotobuf.DoubleSeqTest)
  GOOGLE_DCHECK_NE(&from, this);
  const DoubleSeqTest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DoubleSeqTest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:myprotobuf.DoubleSeqTest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:myprotobuf.DoubleSeqTest)
    MergeFrom(*source);
  }
}

void DoubleSeqTest::MergeFrom(const DoubleSeqTest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:myprotobuf.DoubleSeqTest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  double_mem_.MergeFrom(from.double_mem_);
}

void DoubleSeqTest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:myprotobuf.DoubleSeqTest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DoubleSeqTest::CopyFrom(const DoubleSeqTest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:myprotobuf.DoubleSeqTest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DoubleSeqTest::IsInitialized() const {
  return true;
}

void DoubleSeqTest::Swap(DoubleSeqTest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DoubleSeqTest::InternalSwap(DoubleSeqTest* other) {
  using std::swap;
  double_mem_.InternalSwap(&other->double_mem_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DoubleSeqTest::GetMetadata() const {
  protobuf_ProtobufCustomType_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtobufCustomType_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StringTest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StringTest::kCharMemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StringTest::StringTest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ProtobufCustomType_2eproto::InitDefaultsStringTest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:myprotobuf.StringTest)
}
StringTest::StringTest(const StringTest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      char_mem_(from.char_mem_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:myprotobuf.StringTest)
}

void StringTest::SharedCtor() {
  _cached_size_ = 0;
}

StringTest::~StringTest() {
  // @@protoc_insertion_point(destructor:myprotobuf.StringTest)
  SharedDtor();
}

void StringTest::SharedDtor() {
}

void StringTest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StringTest::descriptor() {
  ::protobuf_ProtobufCustomType_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtobufCustomType_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StringTest& StringTest::default_instance() {
  ::protobuf_ProtobufCustomType_2eproto::InitDefaultsStringTest();
  return *internal_default_instance();
}

StringTest* StringTest::New(::google::protobuf::Arena* arena) const {
  StringTest* n = new StringTest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StringTest::Clear() {
// @@protoc_insertion_point(message_clear_start:myprotobuf.StringTest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  char_mem_.Clear();
  _internal_metadata_.Clear();
}

bool StringTest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:myprotobuf.StringTest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes char_mem = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_char_mem()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:myprotobuf.StringTest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:myprotobuf.StringTest)
  return false;
#undef DO_
}

void StringTest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:myprotobuf.StringTest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes char_mem = 1;
  for (int i = 0, n = this->char_mem_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->char_mem(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:myprotobuf.StringTest)
}

::google::protobuf::uint8* StringTest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:myprotobuf.StringTest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes char_mem = 1;
  for (int i = 0, n = this->char_mem_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->char_mem(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:myprotobuf.StringTest)
  return target;
}

size_t StringTest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:myprotobuf.StringTest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes char_mem = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->char_mem_size());
  for (int i = 0, n = this->char_mem_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->char_mem(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StringTest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:myprotobuf.StringTest)
  GOOGLE_DCHECK_NE(&from, this);
  const StringTest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StringTest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:myprotobuf.StringTest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:myprotobuf.StringTest)
    MergeFrom(*source);
  }
}

void StringTest::MergeFrom(const StringTest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:myprotobuf.StringTest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  char_mem_.MergeFrom(from.char_mem_);
}

void StringTest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:myprotobuf.StringTest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StringTest::CopyFrom(const StringTest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:myprotobuf.StringTest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringTest::IsInitialized() const {
  return true;
}

void StringTest::Swap(StringTest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StringTest::InternalSwap(StringTest* other) {
  using std::swap;
  char_mem_.InternalSwap(&other->char_mem_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StringTest::GetMetadata() const {
  protobuf_ProtobufCustomType_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtobufCustomType_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StringSeqTest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StringSeqTest::kStringMemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StringSeqTest::StringSeqTest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ProtobufCustomType_2eproto::InitDefaultsStringSeqTest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:myprotobuf.StringSeqTest)
}
StringSeqTest::StringSeqTest(const StringSeqTest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      string_mem_(from.string_mem_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:myprotobuf.StringSeqTest)
}

void StringSeqTest::SharedCtor() {
  _cached_size_ = 0;
}

StringSeqTest::~StringSeqTest() {
  // @@protoc_insertion_point(destructor:myprotobuf.StringSeqTest)
  SharedDtor();
}

void StringSeqTest::SharedDtor() {
}

void StringSeqTest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StringSeqTest::descriptor() {
  ::protobuf_ProtobufCustomType_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtobufCustomType_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StringSeqTest& StringSeqTest::default_instance() {
  ::protobuf_ProtobufCustomType_2eproto::InitDefaultsStringSeqTest();
  return *internal_default_instance();
}

StringSeqTest* StringSeqTest::New(::google::protobuf::Arena* arena) const {
  StringSeqTest* n = new StringSeqTest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StringSeqTest::Clear() {
// @@protoc_insertion_point(message_clear_start:myprotobuf.StringSeqTest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  string_mem_.Clear();
  _internal_metadata_.Clear();
}

bool StringSeqTest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:myprotobuf.StringSeqTest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .myprotobuf.StringTest string_mem = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_string_mem()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:myprotobuf.StringSeqTest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:myprotobuf.StringSeqTest)
  return false;
#undef DO_
}

void StringSeqTest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:myprotobuf.StringSeqTest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .myprotobuf.StringTest string_mem = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->string_mem_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->string_mem(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:myprotobuf.StringSeqTest)
}

::google::protobuf::uint8* StringSeqTest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:myprotobuf.StringSeqTest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .myprotobuf.StringTest string_mem = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->string_mem_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->string_mem(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:myprotobuf.StringSeqTest)
  return target;
}

size_t StringSeqTest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:myprotobuf.StringSeqTest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .myprotobuf.StringTest string_mem = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->string_mem_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->string_mem(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StringSeqTest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:myprotobuf.StringSeqTest)
  GOOGLE_DCHECK_NE(&from, this);
  const StringSeqTest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StringSeqTest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:myprotobuf.StringSeqTest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:myprotobuf.StringSeqTest)
    MergeFrom(*source);
  }
}

void StringSeqTest::MergeFrom(const StringSeqTest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:myprotobuf.StringSeqTest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  string_mem_.MergeFrom(from.string_mem_);
}

void StringSeqTest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:myprotobuf.StringSeqTest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StringSeqTest::CopyFrom(const StringSeqTest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:myprotobuf.StringSeqTest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringSeqTest::IsInitialized() const {
  return true;
}

void StringSeqTest::Swap(StringSeqTest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StringSeqTest::InternalSwap(StringSeqTest* other) {
  using std::swap;
  string_mem_.InternalSwap(&other->string_mem_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StringSeqTest::GetMetadata() const {
  protobuf_ProtobufCustomType_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtobufCustomType_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ArrayLongSeqTest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ArrayLongSeqTest::kArrayLongSeqMemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ArrayLongSeqTest::ArrayLongSeqTest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ProtobufCustomType_2eproto::InitDefaultsArrayLongSeqTest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:myprotobuf.ArrayLongSeqTest)
}
ArrayLongSeqTest::ArrayLongSeqTest(const ArrayLongSeqTest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      array_long_seq_mem_(from.array_long_seq_mem_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:myprotobuf.ArrayLongSeqTest)
}

void ArrayLongSeqTest::SharedCtor() {
  _cached_size_ = 0;
}

ArrayLongSeqTest::~ArrayLongSeqTest() {
  // @@protoc_insertion_point(destructor:myprotobuf.ArrayLongSeqTest)
  SharedDtor();
}

void ArrayLongSeqTest::SharedDtor() {
}

void ArrayLongSeqTest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ArrayLongSeqTest::descriptor() {
  ::protobuf_ProtobufCustomType_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtobufCustomType_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ArrayLongSeqTest& ArrayLongSeqTest::default_instance() {
  ::protobuf_ProtobufCustomType_2eproto::InitDefaultsArrayLongSeqTest();
  return *internal_default_instance();
}

ArrayLongSeqTest* ArrayLongSeqTest::New(::google::protobuf::Arena* arena) const {
  ArrayLongSeqTest* n = new ArrayLongSeqTest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ArrayLongSeqTest::Clear() {
// @@protoc_insertion_point(message_clear_start:myprotobuf.ArrayLongSeqTest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  array_long_seq_mem_.Clear();
  _internal_metadata_.Clear();
}

bool ArrayLongSeqTest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:myprotobuf.ArrayLongSeqTest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .myprotobuf.LongSeqTest array_long_seq_mem = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_array_long_seq_mem()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:myprotobuf.ArrayLongSeqTest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:myprotobuf.ArrayLongSeqTest)
  return false;
#undef DO_
}

void ArrayLongSeqTest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:myprotobuf.ArrayLongSeqTest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .myprotobuf.LongSeqTest array_long_seq_mem = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->array_long_seq_mem_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->array_long_seq_mem(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:myprotobuf.ArrayLongSeqTest)
}

::google::protobuf::uint8* ArrayLongSeqTest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:myprotobuf.ArrayLongSeqTest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .myprotobuf.LongSeqTest array_long_seq_mem = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->array_long_seq_mem_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->array_long_seq_mem(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:myprotobuf.ArrayLongSeqTest)
  return target;
}

size_t ArrayLongSeqTest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:myprotobuf.ArrayLongSeqTest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .myprotobuf.LongSeqTest array_long_seq_mem = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->array_long_seq_mem_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->array_long_seq_mem(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ArrayLongSeqTest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:myprotobuf.ArrayLongSeqTest)
  GOOGLE_DCHECK_NE(&from, this);
  const ArrayLongSeqTest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ArrayLongSeqTest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:myprotobuf.ArrayLongSeqTest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:myprotobuf.ArrayLongSeqTest)
    MergeFrom(*source);
  }
}

void ArrayLongSeqTest::MergeFrom(const ArrayLongSeqTest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:myprotobuf.ArrayLongSeqTest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  array_long_seq_mem_.MergeFrom(from.array_long_seq_mem_);
}

void ArrayLongSeqTest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:myprotobuf.ArrayLongSeqTest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ArrayLongSeqTest::CopyFrom(const ArrayLongSeqTest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:myprotobuf.ArrayLongSeqTest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArrayLongSeqTest::IsInitialized() const {
  return true;
}

void ArrayLongSeqTest::Swap(ArrayLongSeqTest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ArrayLongSeqTest::InternalSwap(ArrayLongSeqTest* other) {
  using std::swap;
  array_long_seq_mem_.InternalSwap(&other->array_long_seq_mem_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ArrayLongSeqTest::GetMetadata() const {
  protobuf_ProtobufCustomType_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtobufCustomType_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SeqArrayLongSeqTest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SeqArrayLongSeqTest::kSeqArrayLongSeqMemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SeqArrayLongSeqTest::SeqArrayLongSeqTest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ProtobufCustomType_2eproto::InitDefaultsSeqArrayLongSeqTest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:myprotobuf.SeqArrayLongSeqTest)
}
SeqArrayLongSeqTest::SeqArrayLongSeqTest(const SeqArrayLongSeqTest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      seq_array_long_seq_mem_(from.seq_array_long_seq_mem_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:myprotobuf.SeqArrayLongSeqTest)
}

void SeqArrayLongSeqTest::SharedCtor() {
  _cached_size_ = 0;
}

SeqArrayLongSeqTest::~SeqArrayLongSeqTest() {
  // @@protoc_insertion_point(destructor:myprotobuf.SeqArrayLongSeqTest)
  SharedDtor();
}

void SeqArrayLongSeqTest::SharedDtor() {
}

void SeqArrayLongSeqTest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SeqArrayLongSeqTest::descriptor() {
  ::protobuf_ProtobufCustomType_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtobufCustomType_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SeqArrayLongSeqTest& SeqArrayLongSeqTest::default_instance() {
  ::protobuf_ProtobufCustomType_2eproto::InitDefaultsSeqArrayLongSeqTest();
  return *internal_default_instance();
}

SeqArrayLongSeqTest* SeqArrayLongSeqTest::New(::google::protobuf::Arena* arena) const {
  SeqArrayLongSeqTest* n = new SeqArrayLongSeqTest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SeqArrayLongSeqTest::Clear() {
// @@protoc_insertion_point(message_clear_start:myprotobuf.SeqArrayLongSeqTest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  seq_array_long_seq_mem_.Clear();
  _internal_metadata_.Clear();
}

bool SeqArrayLongSeqTest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:myprotobuf.SeqArrayLongSeqTest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .myprotobuf.ArrayLongSeqTest seq_array_long_seq_mem = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_seq_array_long_seq_mem()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:myprotobuf.SeqArrayLongSeqTest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:myprotobuf.SeqArrayLongSeqTest)
  return false;
#undef DO_
}

void SeqArrayLongSeqTest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:myprotobuf.SeqArrayLongSeqTest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .myprotobuf.ArrayLongSeqTest seq_array_long_seq_mem = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->seq_array_long_seq_mem_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->seq_array_long_seq_mem(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:myprotobuf.SeqArrayLongSeqTest)
}

::google::protobuf::uint8* SeqArrayLongSeqTest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:myprotobuf.SeqArrayLongSeqTest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .myprotobuf.ArrayLongSeqTest seq_array_long_seq_mem = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->seq_array_long_seq_mem_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->seq_array_long_seq_mem(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:myprotobuf.SeqArrayLongSeqTest)
  return target;
}

size_t SeqArrayLongSeqTest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:myprotobuf.SeqArrayLongSeqTest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .myprotobuf.ArrayLongSeqTest seq_array_long_seq_mem = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->seq_array_long_seq_mem_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->seq_array_long_seq_mem(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SeqArrayLongSeqTest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:myprotobuf.SeqArrayLongSeqTest)
  GOOGLE_DCHECK_NE(&from, this);
  const SeqArrayLongSeqTest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SeqArrayLongSeqTest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:myprotobuf.SeqArrayLongSeqTest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:myprotobuf.SeqArrayLongSeqTest)
    MergeFrom(*source);
  }
}

void SeqArrayLongSeqTest::MergeFrom(const SeqArrayLongSeqTest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:myprotobuf.SeqArrayLongSeqTest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  seq_array_long_seq_mem_.MergeFrom(from.seq_array_long_seq_mem_);
}

void SeqArrayLongSeqTest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:myprotobuf.SeqArrayLongSeqTest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SeqArrayLongSeqTest::CopyFrom(const SeqArrayLongSeqTest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:myprotobuf.SeqArrayLongSeqTest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SeqArrayLongSeqTest::IsInitialized() const {
  return true;
}

void SeqArrayLongSeqTest::Swap(SeqArrayLongSeqTest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SeqArrayLongSeqTest::InternalSwap(SeqArrayLongSeqTest* other) {
  using std::swap;
  seq_array_long_seq_mem_.InternalSwap(&other->seq_array_long_seq_mem_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SeqArrayLongSeqTest::GetMetadata() const {
  protobuf_ProtobufCustomType_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtobufCustomType_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TestCustomType::InitAsDefaultInstance() {
  ::myprotobuf::_TestCustomType_default_instance_._instance.get_mutable()->test_long_seq_ = const_cast< ::myprotobuf::LongSeqTest*>(
      ::myprotobuf::LongSeqTest::internal_default_instance());
  ::myprotobuf::_TestCustomType_default_instance_._instance.get_mutable()->test_string_ = const_cast< ::myprotobuf::StringTest*>(
      ::myprotobuf::StringTest::internal_default_instance());
  ::myprotobuf::_TestCustomType_default_instance_._instance.get_mutable()->test_string_seq_ = const_cast< ::myprotobuf::StringSeqTest*>(
      ::myprotobuf::StringSeqTest::internal_default_instance());
  ::myprotobuf::_TestCustomType_default_instance_._instance.get_mutable()->test_double_seq_ = const_cast< ::myprotobuf::DoubleSeqTest*>(
      ::myprotobuf::DoubleSeqTest::internal_default_instance());
  ::myprotobuf::_TestCustomType_default_instance_._instance.get_mutable()->test_array_long_seq_ = const_cast< ::myprotobuf::ArrayLongSeqTest*>(
      ::myprotobuf::ArrayLongSeqTest::internal_default_instance());
  ::myprotobuf::_TestCustomType_default_instance_._instance.get_mutable()->seq_array_long_seq_test_ = const_cast< ::myprotobuf::SeqArrayLongSeqTest*>(
      ::myprotobuf::SeqArrayLongSeqTest::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TestCustomType::kTestLongFieldNumber;
const int TestCustomType::kTestOctetFieldNumber;
const int TestCustomType::kTestLongSeqFieldNumber;
const int TestCustomType::kTestStringFieldNumber;
const int TestCustomType::kTestStringSeqFieldNumber;
const int TestCustomType::kTestDoubleSeqFieldNumber;
const int TestCustomType::kTestArrayLongSeqFieldNumber;
const int TestCustomType::kSeqArrayLongSeqTestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TestCustomType::TestCustomType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ProtobufCustomType_2eproto::InitDefaultsTestCustomType();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:myprotobuf.TestCustomType)
}
TestCustomType::TestCustomType(const TestCustomType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      test_octet_(from.test_octet_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_test_long_seq()) {
    test_long_seq_ = new ::myprotobuf::LongSeqTest(*from.test_long_seq_);
  } else {
    test_long_seq_ = NULL;
  }
  if (from.has_test_string()) {
    test_string_ = new ::myprotobuf::StringTest(*from.test_string_);
  } else {
    test_string_ = NULL;
  }
  if (from.has_test_string_seq()) {
    test_string_seq_ = new ::myprotobuf::StringSeqTest(*from.test_string_seq_);
  } else {
    test_string_seq_ = NULL;
  }
  if (from.has_test_double_seq()) {
    test_double_seq_ = new ::myprotobuf::DoubleSeqTest(*from.test_double_seq_);
  } else {
    test_double_seq_ = NULL;
  }
  if (from.has_test_array_long_seq()) {
    test_array_long_seq_ = new ::myprotobuf::ArrayLongSeqTest(*from.test_array_long_seq_);
  } else {
    test_array_long_seq_ = NULL;
  }
  if (from.has_seq_array_long_seq_test()) {
    seq_array_long_seq_test_ = new ::myprotobuf::SeqArrayLongSeqTest(*from.seq_array_long_seq_test_);
  } else {
    seq_array_long_seq_test_ = NULL;
  }
  test_long_ = from.test_long_;
  // @@protoc_insertion_point(copy_constructor:myprotobuf.TestCustomType)
}

void TestCustomType::SharedCtor() {
  ::memset(&test_long_seq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&test_long_) -
      reinterpret_cast<char*>(&test_long_seq_)) + sizeof(test_long_));
  _cached_size_ = 0;
}

TestCustomType::~TestCustomType() {
  // @@protoc_insertion_point(destructor:myprotobuf.TestCustomType)
  SharedDtor();
}

void TestCustomType::SharedDtor() {
  if (this != internal_default_instance()) delete test_long_seq_;
  if (this != internal_default_instance()) delete test_string_;
  if (this != internal_default_instance()) delete test_string_seq_;
  if (this != internal_default_instance()) delete test_double_seq_;
  if (this != internal_default_instance()) delete test_array_long_seq_;
  if (this != internal_default_instance()) delete seq_array_long_seq_test_;
}

void TestCustomType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TestCustomType::descriptor() {
  ::protobuf_ProtobufCustomType_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtobufCustomType_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TestCustomType& TestCustomType::default_instance() {
  ::protobuf_ProtobufCustomType_2eproto::InitDefaultsTestCustomType();
  return *internal_default_instance();
}

TestCustomType* TestCustomType::New(::google::protobuf::Arena* arena) const {
  TestCustomType* n = new TestCustomType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TestCustomType::Clear() {
// @@protoc_insertion_point(message_clear_start:myprotobuf.TestCustomType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  test_octet_.Clear();
  if (GetArenaNoVirtual() == NULL && test_long_seq_ != NULL) {
    delete test_long_seq_;
  }
  test_long_seq_ = NULL;
  if (GetArenaNoVirtual() == NULL && test_string_ != NULL) {
    delete test_string_;
  }
  test_string_ = NULL;
  if (GetArenaNoVirtual() == NULL && test_string_seq_ != NULL) {
    delete test_string_seq_;
  }
  test_string_seq_ = NULL;
  if (GetArenaNoVirtual() == NULL && test_double_seq_ != NULL) {
    delete test_double_seq_;
  }
  test_double_seq_ = NULL;
  if (GetArenaNoVirtual() == NULL && test_array_long_seq_ != NULL) {
    delete test_array_long_seq_;
  }
  test_array_long_seq_ = NULL;
  if (GetArenaNoVirtual() == NULL && seq_array_long_seq_test_ != NULL) {
    delete seq_array_long_seq_test_;
  }
  seq_array_long_seq_test_ = NULL;
  test_long_ = 0;
  _internal_metadata_.Clear();
}

bool TestCustomType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:myprotobuf.TestCustomType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 test_long = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &test_long_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .myprotobuf.Octet test_octet = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_test_octet()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .myprotobuf.LongSeqTest test_long_seq = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_test_long_seq()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .myprotobuf.StringTest test_string = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_test_string()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .myprotobuf.StringSeqTest test_string_seq = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_test_string_seq()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .myprotobuf.DoubleSeqTest test_double_seq = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_test_double_seq()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .myprotobuf.ArrayLongSeqTest test_array_long_seq = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_test_array_long_seq()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .myprotobuf.SeqArrayLongSeqTest seq_array_long_seq_test = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_seq_array_long_seq_test()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:myprotobuf.TestCustomType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:myprotobuf.TestCustomType)
  return false;
#undef DO_
}

void TestCustomType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:myprotobuf.TestCustomType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 test_long = 1;
  if (this->test_long() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->test_long(), output);
  }

  // repeated .myprotobuf.Octet test_octet = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->test_octet_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->test_octet(static_cast<int>(i)), output);
  }

  // .myprotobuf.LongSeqTest test_long_seq = 3;
  if (this->has_test_long_seq()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->test_long_seq_, output);
  }

  // .myprotobuf.StringTest test_string = 4;
  if (this->has_test_string()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->test_string_, output);
  }

  // .myprotobuf.StringSeqTest test_string_seq = 5;
  if (this->has_test_string_seq()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->test_string_seq_, output);
  }

  // .myprotobuf.DoubleSeqTest test_double_seq = 6;
  if (this->has_test_double_seq()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->test_double_seq_, output);
  }

  // .myprotobuf.ArrayLongSeqTest test_array_long_seq = 7;
  if (this->has_test_array_long_seq()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->test_array_long_seq_, output);
  }

  // .myprotobuf.SeqArrayLongSeqTest seq_array_long_seq_test = 8;
  if (this->has_seq_array_long_seq_test()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->seq_array_long_seq_test_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:myprotobuf.TestCustomType)
}

::google::protobuf::uint8* TestCustomType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:myprotobuf.TestCustomType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 test_long = 1;
  if (this->test_long() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->test_long(), target);
  }

  // repeated .myprotobuf.Octet test_octet = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->test_octet_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->test_octet(static_cast<int>(i)), deterministic, target);
  }

  // .myprotobuf.LongSeqTest test_long_seq = 3;
  if (this->has_test_long_seq()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->test_long_seq_, deterministic, target);
  }

  // .myprotobuf.StringTest test_string = 4;
  if (this->has_test_string()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->test_string_, deterministic, target);
  }

  // .myprotobuf.StringSeqTest test_string_seq = 5;
  if (this->has_test_string_seq()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->test_string_seq_, deterministic, target);
  }

  // .myprotobuf.DoubleSeqTest test_double_seq = 6;
  if (this->has_test_double_seq()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->test_double_seq_, deterministic, target);
  }

  // .myprotobuf.ArrayLongSeqTest test_array_long_seq = 7;
  if (this->has_test_array_long_seq()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *this->test_array_long_seq_, deterministic, target);
  }

  // .myprotobuf.SeqArrayLongSeqTest seq_array_long_seq_test = 8;
  if (this->has_seq_array_long_seq_test()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, *this->seq_array_long_seq_test_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:myprotobuf.TestCustomType)
  return target;
}

size_t TestCustomType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:myprotobuf.TestCustomType)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .myprotobuf.Octet test_octet = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->test_octet_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->test_octet(static_cast<int>(i)));
    }
  }

  // .myprotobuf.LongSeqTest test_long_seq = 3;
  if (this->has_test_long_seq()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->test_long_seq_);
  }

  // .myprotobuf.StringTest test_string = 4;
  if (this->has_test_string()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->test_string_);
  }

  // .myprotobuf.StringSeqTest test_string_seq = 5;
  if (this->has_test_string_seq()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->test_string_seq_);
  }

  // .myprotobuf.DoubleSeqTest test_double_seq = 6;
  if (this->has_test_double_seq()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->test_double_seq_);
  }

  // .myprotobuf.ArrayLongSeqTest test_array_long_seq = 7;
  if (this->has_test_array_long_seq()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->test_array_long_seq_);
  }

  // .myprotobuf.SeqArrayLongSeqTest seq_array_long_seq_test = 8;
  if (this->has_seq_array_long_seq_test()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->seq_array_long_seq_test_);
  }

  // int32 test_long = 1;
  if (this->test_long() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->test_long());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TestCustomType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:myprotobuf.TestCustomType)
  GOOGLE_DCHECK_NE(&from, this);
  const TestCustomType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TestCustomType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:myprotobuf.TestCustomType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:myprotobuf.TestCustomType)
    MergeFrom(*source);
  }
}

void TestCustomType::MergeFrom(const TestCustomType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:myprotobuf.TestCustomType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  test_octet_.MergeFrom(from.test_octet_);
  if (from.has_test_long_seq()) {
    mutable_test_long_seq()->::myprotobuf::LongSeqTest::MergeFrom(from.test_long_seq());
  }
  if (from.has_test_string()) {
    mutable_test_string()->::myprotobuf::StringTest::MergeFrom(from.test_string());
  }
  if (from.has_test_string_seq()) {
    mutable_test_string_seq()->::myprotobuf::StringSeqTest::MergeFrom(from.test_string_seq());
  }
  if (from.has_test_double_seq()) {
    mutable_test_double_seq()->::myprotobuf::DoubleSeqTest::MergeFrom(from.test_double_seq());
  }
  if (from.has_test_array_long_seq()) {
    mutable_test_array_long_seq()->::myprotobuf::ArrayLongSeqTest::MergeFrom(from.test_array_long_seq());
  }
  if (from.has_seq_array_long_seq_test()) {
    mutable_seq_array_long_seq_test()->::myprotobuf::SeqArrayLongSeqTest::MergeFrom(from.seq_array_long_seq_test());
  }
  if (from.test_long() != 0) {
    set_test_long(from.test_long());
  }
}

void TestCustomType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:myprotobuf.TestCustomType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestCustomType::CopyFrom(const TestCustomType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:myprotobuf.TestCustomType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestCustomType::IsInitialized() const {
  return true;
}

void TestCustomType::Swap(TestCustomType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TestCustomType::InternalSwap(TestCustomType* other) {
  using std::swap;
  test_octet_.InternalSwap(&other->test_octet_);
  swap(test_long_seq_, other->test_long_seq_);
  swap(test_string_, other->test_string_);
  swap(test_string_seq_, other->test_string_seq_);
  swap(test_double_seq_, other->test_double_seq_);
  swap(test_array_long_seq_, other->test_array_long_seq_);
  swap(seq_array_long_seq_test_, other->seq_array_long_seq_test_);
  swap(test_long_, other->test_long_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TestCustomType::GetMetadata() const {
  protobuf_ProtobufCustomType_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtobufCustomType_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace myprotobuf

// @@protoc_insertion_point(global_scope)
